import json
import string
import random
from json import JSONDecodeError
from datetime import datetime

from commandline import Product_Name

def Register(type,gamers_json_file,sellers_json_file,Email_ID,Username,Password,Contact_Number):
    '''Register Function || Already Given'''
    if type.lower()=='seller':
        f=open(sellers_json_file,'r+')
        d={
            "Email":Email_ID,
            "Username":Username,
            "Password":Password,
            "Contact Number":Contact_Number,
        }
        try:
            content=json.load(f)
            if d not in content and d["Username"] not in str(content):
                content.append(d)
                f.seek(0)
                f.truncate()
                json.dump(content,f)
        except JSONDecodeError:
            l=[]
            l.append(d)
            json.dump(l,f)
        f.close()
        return True
    elif type.lower()=='gamer':
        f=open(gamers_json_file,'r+')
        d={
            "Email":Email_ID,
            "Username":Username,
            "Password":Password,
            "Contact Number":Contact_Number,
            "Wishlist":[],
            "Cart":[],
        }
        try:
            content=json.load(f)
            if d not in content and d["Username"] not in str(content):
                content.append(d)
                f.seek(0)
                f.truncate()
                json.dump(content,f)
        except JSONDecodeError:
            l=[]
            l.append(d)
            json.dump(l,f)
        f.close()

def Login(type,gamers_json_file,sellers_json_file,Username,Password):
    '''Login Functionality || Return True if successfully logged in else False || Already Given'''
    d=0
    if type.lower()=='seller':
        f=open(sellers_json_file,'r+')
    else:
        f=open(gamers_json_file,'r+')
    try:
        content=json.load(f)
    except JSONDecodeError:
        return False
    for i in range(len(content)):
        if content[i]["Username"]==Username and content[i]["Password"]==Password:
            d=1
            break
    f.seek(0)
    f.truncate()
    json.dump(content,f)
    f.close()
    if d==0:
        return False
    return True

def AutoGenerate_ProductID():
    '''Return a autogenerated random product ID || Already Given'''
    product_ID=''.join(random.choices(string.ascii_uppercase+string.digits,k=4))
    return product_ID

def AutoGenerate_OrderID():
    '''Return a autogenerated random product ID || Already Given'''
    Order_ID=''.join(random.choices(string.ascii_uppercase+string.digits,k=3))
    return Order_ID

def days_between(d1, d2):
    '''Calculating the number of days between two dates || Already Given'''
    d1 = datetime.strptime(d1, "%Y-%m-%d")
    d2 = datetime.strptime(d2, "%Y-%m-%d")
    return abs((d2 - d1).days)

def Create_Product(owner,product_json_file,product_ID,product_title,product_type,price_per_day,total_stock_available):
    '''Creating a product || Return True if successfully created else False'''
    '''Write your code below'''
    
    f=open(product_json_file,'r+')
    d={
        "Product ID":product_ID,
        "Product Title":product_title,
        "Product Type":product_type,
        "Price Per Day":price_per_day,
        "Total Stock":total_stock_available
    }
    try:
        content=json.load(f)
        if d not in content and d["Product ID"] not in str(content):
            content.append(d)
            f.seek(0)
            f.truncate()
            json.dump(content,f)
    except JSONDecodeError:
        l=[]
        l.append(d)
        json.dump(l,f)
    f.close()
    return True

    

def Fetch_all_Products_created_by_seller(owner,product_json_file):
    '''Get all products created by the seller(owner)'''
    '''Write your code below'''
    
    All_Products_created_by_seller_list=[]
    
    f=open(product_json_file,'r')
    try:
        content=json.load(f)
        All_Products_created_by_seller_list=content
    except JSONDecodeError:
        pass
    return All_Products_created_by_seller_list


def Fetch_all_products(products_json_file):
    '''Get all products created till now || Helper Function || Already Given'''
    All_Products_list=[]
    f=open(products_json_file,'r')
    try:
        content=json.load(f)
        All_Products_list=content
    except JSONDecodeError:
        pass
    return All_Products_list

def Fetch_Product_By_ID(product_json_file,product_ID):
    '''Get product deatils by product ID'''
    '''Write your code below'''
    f=open(product_json_file,'r+')
    content=json.load(f)
    d=[]
    for i in range(len(content)):
        if content[i]["Product ID"]==product_ID:
            d.append(content[i])
    f.close()
    return d



def Update_Product(Username,product_json_file,product_ID,detail_to_be_updated,new_value):
    '''Updating Product || Return True if successfully updated else False'''
    '''Write your code below'''
    file=open(product_json_file,'r+')
    content=json.load(file)
    Username=Username
    for i in range(len(content)):
        if content[i]["Product ID"]==product_ID:
            if detail_to_be_updated=='Product Title':
                content[i]['Product Title']=new_value
            elif detail_to_be_updated=='Product Type':
                content[i]['Product Type']=new_value
            elif detail_to_be_updated=='Price Per Day':
                content[i]['Price Per Day']=new_value
            elif detail_to_be_updated=='Total Stock':
                content[i]['Total Stock']=new_value
            
            else:
                return False  
            file.seek(0)
            file.truncate()
            json.dump(content,file)
            file.close() 
    return True

def Add_item_to_wishlist(Username,product_ID,gamers_json_file):
    '''Add Items to wishlist || Return True if added successfully else False'''
    '''Write your code below'''
    Game = {
        "Product ID":product_ID,
        }
    try:
        file = open(gamers_json_file,"r+")
        content = json.load(file)
        for i in range(len(content)):
            if content[i]["Product Id"] == product_ID:
                file.close()
                return"Game is already available"
        Game["Product ID"]=len(content)+1
        content.append(Game)
    
    except JSONDecodeError:
        content = []
        content.append(Game)
    file.seek(0)
    file.truncate()
    json.dump(content,file,indent=4)
    file.close()
    return "Success"
print(Add_item_to_wishlist("Product Added to Whishlist Successfully"))


def Remove_item_from_wishlist(Username,product_ID,gamers_json_filegamers_json_file):
    '''Remove items from wishlist || Return True if removed successfully else False'''
    '''Write your code below'''
    file = open(gamers_json_filegamers_json_file,"r+")
    content = json.load(file)
    for i in range(len(content)):
        if content[i]["Product ID"] == product_ID:
            del content[i]
            file.seek(0)
            file.truncate()
            json.dump(content,file,indent=4)
            file.close()
            return "Success"
    return "please enter valid ID"
    

def Add_item_to_cart(Username,product_ID,Quantity,gamers_json_file,booking_start_date,booking_end_date,products_json_file):
    '''Add item to the cart || Check whether the quantity mentioned is available || Return True if added successfully else False'''
    '''Add the Product ID, Quantity, Price, Booking Start Date, Booking End Date in the cart as list of dictionaries'''
    '''Write your code below'''
    Game = {
        "Product ID":product_ID,
        "Quantity":Quantity,
        "Booking Start Date":booking_start_date,
        "Booking End Date" :booking_end_date                
    }
    try:
        file = open(products_json_file,"r+")
        content = json.load(file)
        for i in range(len(content)):
            if content[i]["Product Id"] == product_ID:
                file.close()
                return"Game is already available"
        Game["Product ID"]=len(content)+1
        content.append(Game)
    
    except JSONDecodeError:
        content = []
        content.append(Game)
    file.seek(0)
    file.truncate()
    json.dump(content,file,indent=4)
    file.close()
    return "Success"
print(Add_item_to_cart("Product Added to Cart Successfully"))
    

def Remove_item_from_cart(Username,product_ID,gamers_json_file):
    '''Remove items from the cart || Return True if removed successfully else False'''
    '''Write your code below'''
    file = open(gamers_json_file,"r+")
    content = json.load(file)
    for i in range(len(content)):
        if content[i]["Product ID"] == product_ID:
            del content[i]
            file.seek(0)
            file.truncate()
            json.dump(content,file,indent=4)
            file.close()
            return "Success"
    return "please enter valid ID"
    

def View_Cart(Username,gamers_json_file):
    '''Return the current cart of the user'''
    '''Write your code below'''
    file = open(gamers_json_file,)
    content = json.load(file)
    print("Menu")
    for i in range(len(content)):
        print("Product ID: ",content[i]["Product ID"])
        print(f"---> Name: (content[i]['name'])")
        print(f"---> Quantity: (content[i]['Quantity'])")
    file.close()
    return True
    

def Place_order(Username,gamers_json_file,Order_Id,orders_json_file,products_json_file):
    '''Place order || Return True is order placed successfully else False || Decrease the quantity of the product orderd if successfull'''
    '''Write your code below'''
    date=datetime.datetime.today().starttime('%m-%d-%y')
    file = open(gamers_json_file,"r+")
    content= json.load(file)
    file1= open(products_json_file,"r+")
    for i in range(len(content)):
        if content[i]["Order ID"] == Order_Id:
            return True
                
                    
        else:
            print("Not available")
            break
    file.seek(0)
    file.truncate()
    json.dump(content,file,indent=4)
    file.close()
    file1.seek(0)
    file1.truncate()
    json.dump(content,file1, indent=4)
    file1.close()
            
    

def View_User_Details(gamers_json_file,Username):

    '''Return a list with all gamer details based on the username || return an empty list if username not found'''
    '''Write your code below'''
    file = open(gamers_json_file,)
    content = json.load(file)
    print("Menu")
    for i in range(len(content)):
        print("Username: ",content[i]["username"])
        print(f"---> Name: (content[i]['name'])")
        
    file.close()
    return True
    

def Update_User(gamers_json_file,Username,detail_to_be_updated,updated_detail):
    '''Update the detail_to_be_updated of the user to updated_detail || Return True if successful else False'''
    '''Write your code below'''
    file=open(gamers_json_file,'r+')
    content=json.load(file)
    Username=Username
    for i in range(len(content)):
        if content[i]["Username"]==Username:
            if detail_to_be_updated=='Email ID':
                content[i]['Email ID']=updated_detail
            elif detail_to_be_updated=='Password':
                content[i]['Password']=updated_detail
            elif detail_to_be_updated=='Contact Number':
                content[i]['Contact_Number']=updated_detail
            
            
            else:
                return False  
            file.seek(0)
            file.truncate()
            json.dump(content,file)
            file.close() 
    return True
    
    

def Fetch_all_orders(orders_json_file,Username):

    '''Fetch all previous orders for the user and return them as a list'''
    '''Write your code below'''
    All_Orders_list=[]
    f=open(orders_json_file,'r')
    try:
        content=json.load(f)
        All_Orders_list=content
    except JSONDecodeError:
        pass
    return All_Orders_list
    

